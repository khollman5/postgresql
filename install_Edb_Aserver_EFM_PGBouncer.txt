####################################
####################################
#Set up Streaming Replication

# RHEL v8 install:
sudo dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
sudo dnf makecache

# Complete EDB install:
sudo dnf -y install edb-as16-server 

sudo systemctl status edb-as-16
sudo PGSETUP_INITDB_OPTIONS="-E UTF-8" /usr/edb/as16/bin/edb-as-16-setup initdb
systemctl start edb-as-16
systemctl enable edb-as-16
systemctl status edb-as-16

vi $HOME/.bash_profile
PATH=$PATH:$HOME/bin:/opt/EDB/TPA/bin:/usr/edb/as16/bin
 alias pgd='sudo -iu enterprisedb pgd'
 alias psql='sudo -iu enterprisedb psql edb'
 
# Change port to 3306 at instance / server level:
vi /var/lib/edb/as16/data/postgresql.conf
port = 3306
systemctl restart edb-as-16

sudo -iu enterprisedb
vi /var/lib/edb/.enterprisedb_profile
 PATH=$PATH:$HOME/bin:/usr/edb/as16/bin
 export PATH

# Configure Streaming replication:
# On Primary:
psql

CREATE USER replicator
WITH REPLICATION
ENCRYPTED PASSWORD 'replicator';

--ALTER SYSTEM SET wal_level TO 'hot_standby'; # Not Needed in v16.4
ALTER SYSTEM SET archive_mode TO 'ON';
ALTER SYSTEM SET max_wal_senders TO '5';
ALTER SYSTEM SET wal_keep_segments TO '10';
ALTER SYSTEM SET listen_addresses TO '*';
ALTER SYSTEM SET hot_standby TO 'ON';
ALTER SYSTEM SET archive_command TO 'test ! -f /opt/mysql/pg_archive/%f && cp %p /opt/mysql/pg_archive/%f';

select pg_reload_conf();

show wal_level;
show archive_mode;


mkdir /opt/mysql/pg_archive
chown enterprisedb:enterprisedb /opt/mysql/pg_archive

psql -c "alter user enterprisedb with password 'secret'" -c "select pg_reload_conf()"
echo -e "*:*:*:enterprisedb:secret" | sudo -u enterprisedb tee /var/lib/edb/.pgpass; sudo chmod 0600 /var/lib/edb/.pgpass

# pg_ctl -D /var/lib/edb/as16/data restart -mf
# sudo -iu enterprisedb pg_ctl -D /var/lib/edb/as16/data status -mf

systemctl restart edb-as-16
systemctl status edb-as-16

# Back on Primary
# Update the pg_hba.conf file:
echo -e "host replication replicator 10.128.136.58/21 md5" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/pg_hba.conf >/dev/null
echo -e "host replication replicator 10.128.136.59/21 md5" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/pg_hba.conf >/dev/null
echo -e "host replication replicator 10.128.136.60/21 md5" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/pg_hba.conf >/dev/null
# so it should look like:
 # IPv4 local connections:
 host    all             all             127.0.0.1/32            scram-sha-256
 host    all             enterprisedb	 10.128.136.60/21                trust
 host    all             enterprisedb	 10.128.136.59/21                trust
 host    all             enterprisedb	 10.128.136.58/21                trust
 # IPv6 local connections:
 host    all             all             ::1/128                 scram-sha-256
 # Allow replication connections from localhost, by a user with the
 # replication privilege.
 local   replication     all                                     peer
 host    replication     all             127.0.0.1/32            scram-sha-256
 host    replication     all             ::1/128                 scram-sha-256
 host    replication     replicator      10.128.136.58/21                md5
 host    replication     replicator      10.128.136.59/21                md5
 host    replication     replicator      10.128.136.60/21                md5

sudo -iu enterprisedb pg_ctl -D /var/lib/edb/as16/data reload
 or
sudo -iu enterprisedb psql -U enterprisedb -p 3306 -c "select pg_reload_conf()"

psql -c "\l"
psql -c "\dn *"

# Add a table and some rows:
psql
 CREATE TABLE quicktest ( id SERIAL PRIMARY KEY, value INT ); 
 INSERT INTO quicktest (value) SELECT random()*10000 FROM generate_series(1,10000);
# check:
 select COUNT(*),SUM(value) from quicktest;

###############
# Set up replica:
# dbgsc-r-db-02
systemctl stop edb-as-16
rm -rf /var/lib/edb/as16/data/*
sudo -iu enterprisedb pg_basebackup -h 10.128.136.59 -U replicator -p 3306 -D /var/lib/edb/as16/data -Xs -R -P 
Password:  replicator

echo -e "*:*:*:enterprisedb:secret" | sudo -u enterprisedb tee /var/lib/edb/.pgpass; sudo chmod 0600 /var/lib/edb/.pgpass

vi $PGDATA/standby.signal
# In v16.4 recovery.conf no longer applies, so we use "standby.signal".
 primary_conninfo = 'host=10.128.136.59 port=3306 user=replicator password=replicator'
 restore_command = 'cp /opt/mysql/pg_archive/%f %p'
 archive_cleanup_command = 'pg_archivecleanup /opt/mysql/pg_archive %r'

vi $PGDATA/postgresql.conf
 primary_conninfo = 'host=10.128.136.59 port=3306 user=replicator password=replicator' 

mkdir /opt/mysql/pg_archive
chown enterprisedb:enterprisedb /opt/mysql/pg_archive

systemctl start edb-as-16
psql -c "alter user enterprisedb with password 'secret'" -c "select pg_reload_conf()"

# Make sure replication is happening:
# Primary:
psql -h dbgsc-r-db-01 -c "select pg_current_wal_lsn()"
# Replica:
psql -h dbgsc-r-db-02 -c "select pg_last_wal_receive_lsn()"

# Create and configure slots
# On Primary:
select * FROM pg_create_physical_replication_slot('dbgsc_r_db_02');
SELECT slot_name, slot_type, active FROM pg_replication_slots;
# Tell Standby / replica to use it:
alter system set primary_slot_name = 'dbgsc_r_db_02';
select pg_reload_conf();

# On relica tell it where to find the archived WALs:
ALTER SYSTEM SET restore_command = 'cp /opt/mysql/pg_archive/%f %p';
select pg_reload_conf();

###############
# Add another node:
# dbgsc-r-db-03
systemctl stop edb-as-16
rm -rf /var/lib/edb/as16/data/*
sudo -iu enterprisedb pg_basebackup -h 10.128.136.59 -U replicator -p 3306 -D /var/lib/edb/as16/data -Xs -R -P 

echo -e "*:*:*:enterprisedb:secret" | sudo -u enterprisedb tee /var/lib/edb/.pgpass; sudo chmod 0600 /var/lib/edb/.pgpass

vi $PGDATA/standby.signal
# In v16.4 recovery.conf no longer applies, so we use "standby.signal".
 primary_conninfo = 'host=10.128.136.59 port=3306 user=replicator password=replicator'
 restore_command = 'cp /opt/mysql/pg_archive/%f %p'
 archive_cleanup_command = 'pg_archivecleanup /opt/mysql/pg_archive %r'

vi $PGDATA/postgresql.conf
 primary_conninfo = 'host=10.128.136.59 port=3306 user=replicator password=replicator' 

mkdir /opt/mysql/pg_archive
chown enterprisedb:enterprisedb /opt/mysql/pg_archive

systemctl start edb-as-16
psql -c "alter user enterprisedb with password 'secret'" -c "select pg_reload_conf()"

# Make sure replication is happening:
# Primary:
psql -h dbgsc-r-db-01 -c "select pg_current_wal_lsn()"
# Replica:
psql -h dbgsc-r-db-03 -c "select pg_last_wal_receive_lsn()"

# Create and configure slots
# On Primary:
select * FROM pg_create_physical_replication_slot('dbgsc_r_db_03');
SELECT slot_name, slot_type, active FROM pg_replication_slots;
# Tell Standby / replica to use it:
alter system set primary_slot_name = 'dbgsc_r_db_03';
select pg_reload_conf();

# On relica tell it where to find the archived WALs:
ALTER SYSTEM SET restore_command = 'cp /opt/mysql/pg_archive/%f %p';
select pg_reload_conf();



####################################
####################################
# Edb PGBouncer (listens on 3307):

sudo dnf -y install edb-pgbouncer123

vi /etc/edb/pgbouncer1.23/edb-pgbouncer-1.23.ini
 edb = host=10.128.136.59 port=3306 dbname=edb

 [pgbouncer]
 listen_addr = 10.128.136.59
 listen_port = 3307

# Configure Authentication:
 auth_type = md5
 auth_file = /etc/edb/pgbouncer1.23/userlist.txt
 pool_mode = session
 max_client_conn = 100
 default_pool_size = 20
 peer_id = 1
 # on 2nd node:
 peer_id = 2
 # on 3rd node:
 peer_id = 3
 application_name_add_host = 1
 
echo -e "\"enterprisedb\" \"secret\"" | sudo -u enterprisedb tee -a /etc/edb/pgbouncer1.23/userlist.txt >/dev/null

systemctl enable edb-pgbouncer-1.23
systemctl start edb-pgbouncer-1.23
systemctl status edb-pgbouncer-1.23



####################################
####################################
# EFM install:

sudo dnf -y install edb-efm410

cd /etc/edb/efm-4.10/
cp efm.properties.in efm.properties
cp efm.nodes.in efm.nodes
chmod 666 efm.properties
chmod 666 efm.nodes

# On host dbgsc-r-db-01 (10.128.136.59)
vi efm.properties
db.user=enterprisedb
db.password.encrypted=cae947837a0dbe0a33751f5c16749fff
db.port=3306
db.database=edb
db.service.owner=enterprisedb
db.service.name=edb-as-16
db.bin=/usr/edb/as16/bin
db.data.dir=/var/lib/edb/as16/data
db.config.dir=/var/lib/edb/as16/data
user.email=keith.hollman@un.org
from.email=dbgsc-r-db-01@global.un.org
bind.address=10.128.136.59:3308
#admin.port=7809
admin.port=3309
is.witness=false
auto.allow.hosts=false
#auto.allow.hosts=true
stable.nodes.file=true
efm.loglevel=TRACE

vi efm.nodes

# On all nodes:
systemctl start edb-efm-4.10

# Add standby and witness node ip in allow-node list:
/usr/edb/efm-4.10/bin/efm allow-node efm 10.128.136.58
/usr/edb/efm-4.10/bin/efm allow-node efm 10.128.136.60

/usr/edb/efm-4.10/bin/efm cluster-status efm




sudo -iu enterprisedb pg_rewind -D /var/lib/edb/as16/data --source-server="port=3306 host=10.128.136.58  user=enterprisedb dbname=edb"
pg_rewind: servers diverged at WAL location 0/70000A0 on timeline 1
pg_rewind: rewinding from last common checkpoint at 0/7000028 on timeline 1
pg_rewind: Done!

