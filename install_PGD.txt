Token:
khollman@yahoo.com		190o7UWczQLGcIlIpcFiQcIL9mLtuGpk
keith.hollman@un.org	8KI06WKGzlMS8HhgaUkLyIOPUzczPqlp


https://www.enterprisedb.com/docs/pgd/latest/deploy-config/deploy-manual/deploying/04-installing-software/


1: Configuring Enterprise repositories

#########
# Template so we know that a token is required!

curl -1sLf 'https://downloads.enterprisedb.com/XXXXXXXXXXXXXXXX/enterprise/setup.rpm.sh' | sudo -E bash
dnf install yum-utils 
rpm --import 'https://downloads.enterprisedb.com/XXXXXXXXXXXXXXXX/enterprise/gpg.E71EB0829F1EF813.key'
curl -1sLf 'https://downloads.enterprisedb.com/XXXXXXXXXXXXXXXX/enterprise/config.rpm.txt?distro=el&codename=9' > /tmp/enterprise.repo
dnf config-manager --add-repo '/tmp/enterprise.repo'
dnf -q makecache -y --disablerepo='*' --enablerepo='enterprisedb-enterprise'


#########
# Real-life install:

curl -1sLf 'https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/setup.rpm.sh' | sudo -E bash


Executing the  setup script for the 'enterprisedb/enterprise' repository ...

   OK: Checking for required executable 'curl' ...
   OK: Checking for required executable 'rpm' ...
   OK: Detecting your OS distribution and release using system methods ...
 ^^^^: ... Detected/provided for your OS/distribution, version and architecture:
 >>>>:
 >>>>: ... distro=rhel  version=8.9  codename=Ootpa  arch=x86_64
 >>>>:
   OK: Importing 'enterprisedb/enterprise' repository GPG keys into rpm ...
   OK: Checking for available package manager (DNF/Microdnf/YUM/Zypper) ...
 ^^^^: ... Detected package manager as 'dnf'
   OK: Checking for dnf dependency 'dnf-plugins-core' ...
   OK: Checking if upstream install config is OK ...
   OK: Fetching 'enterprisedb/enterprise' repository configuration ...
   OK: Installing 'enterprisedb/enterprise' repository via dnf ...
  RUN: Updating the dnf cache to fetch the new repository metadata ...Importing GPG key 0x9F1EF813:
 Userid     : "Cloudsmith Package (enterprisedb/enterprise) <support@cloudsmith.io>"
 Fingerprint: 31A4 CF09 0B3A E265 F131 58DE E71E B082 9F1E F813
 From       : https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/gpg.E71EB0829F1EF813.key
Importing GPG key 0x9F1EF813:
 Userid     : "Cloudsmith Package (enterprisedb/enterprise) <support@cloudsmith.io>"
 Fingerprint: 31A4 CF09 0B3A E265 F131 58DE E71E B082 9F1E F813
 From       : https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/gpg.E71EB0829F1EF813.key
Importing GPG key 0x9F1EF813:
 Userid     : "Cloudsmith Package (enterprisedb/enterprise) <support@cloudsmith.io>"
 Fingerprint: 31A4 CF09 0B3A E265 F131 58DE E71E B082 9F1E F813
 From       : https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/gpg.E71EB0829F1EF813.key
   OK: Updating the dnf cache to fetch the new repository metadata ...
   OK: The repository has been installed successfully - You're ready to rock!




dnf install yum-utils 
rpm --import 'https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/gpg.E71EB0829F1EF813.key'
curl -1sLf 'https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/config.rpm.txt?distro=el&codename=9' > /tmp/enterprise.repo
dnf config-manager --add-repo '/tmp/enterprise.repo'
dnf -q makecache -y --disablerepo='*' --enablerepo='enterprisedb-enterprise'

##################
# Version RHEL 8
dnf install yum-utils 
rpm --import 'https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/gpg.E71EB0829F1EF813.key'
curl -1sLf 'https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/enterprise/config.rpm.txt?distro=el&codename=8' > /tmp/enterprise.repo
dnf config-manager --add-repo '/tmp/enterprise.repo'
dnf -q makecache -y --disablerepo='*' --enablerepo='enterprisedb-enterprise'

2: Install Postgres

sudo dnf -y install edb-as16-server

!!!!!!!!!!!!!!!!!
!
Error:
 Problem: cannot install the best candidate for the job
  - nothing provides libc.so.6(GLIBC_2.33)(64bit) needed by edb-as16-server-sqlprotect-16.3.0-2.el9.x86_64 from enterprisedb-enterprise

# Make sure it's RHEL v9 or v8.
export DISTRO="el"
export CODENAME="9"


Step 3 - Configuring *PGD* repositories
=======================================

export EDB_SUBSCRIPTION_TOKEN=190o7UWczQLGcIlIpcFiQcIL9mLtuGpk

curl -1sLf "https://downloads.enterprisedb.com/$EDB_SUBSCRIPTION_TOKEN/postgres_distributed/setup.rpm.sh" | sudo -E bash


 Executing the  setup script for the 'enterprisedb/postgres_distributed' repository ...

   OK: Checking for required executable 'curl' ...
   OK: Checking for required executable 'rpm' ...
   OK: Detecting your OS distribution and release using system methods ...
 ^^^^: ... Detected/provided for your OS/distribution, version and architecture:
 >>>>:
 >>>>: ... distro=rhel  version=8.10  codename=Ootpa  arch=x86_64
 >>>>:
   OK: Importing 'enterprisedb/postgres_distributed' repository GPG keys into rpm ...
   OK: Checking for available package manager (DNF/Microdnf/YUM/Zypper) ...
 ^^^^: ... Detected package manager as 'dnf'
   OK: Checking for dnf dependency 'dnf-plugins-core' ...
   OK: Checking if upstream install config is OK ...
   OK: Fetching 'enterprisedb/postgres_distributed' repository configuration ...
   OK: Installing 'enterprisedb/postgres_distributed' repository via dnf ...
  RUN: Updating the dnf cache to fetch the new repository metadata ...Importing GPG key 0x30DA0084:
 Userid     : "Cloudsmith Package (enterprisedb/postgres_distributed) <support@cloudsmith.io>"
 Fingerprint: 0FB5 8853 E4A6 6763 24CB DF7C B09F 4062 30DA 0084
 From       : https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/postgres_distributed/gpg.B09F406230DA0084.key
Importing GPG key 0x30DA0084:
 Userid     : "Cloudsmith Package (enterprisedb/postgres_distributed) <support@cloudsmith.io>"
 Fingerprint: 0FB5 8853 E4A6 6763 24CB DF7C B09F 4062 30DA 0084
 From       : https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/postgres_distributed/gpg.B09F406230DA0084.key
Importing GPG key 0x30DA0084:
 Userid     : "Cloudsmith Package (enterprisedb/postgres_distributed) <support@cloudsmith.io>"
 Fingerprint: 0FB5 8853 E4A6 6763 24CB DF7C B09F 4062 30DA 0084
 From       : https://downloads.enterprisedb.com/190o7UWczQLGcIlIpcFiQcIL9mLtuGpk/postgres_distributed/gpg.B09F406230DA0084.key
   OK: Updating the dnf cache to fetch the new repository metadata ...
   OK: The repository has been installed successfully - You're ready to rock!

#####
# Duplicate repository correction:
# yum update (or similar) would give:

Repository enterprisedb-enterprise is listed more than once in the configuration
Repository enterprisedb-enterprise-noarch is listed more than once in the configuration
Repository enterprisedb-enterprise-source is listed more than once in the configuration

ls -lrt /etc/yum.repos.d

total 32
-rw-r--r-- 1 root root 2492 Oct 24  2023 mysql-community-source.repo
-rw-r--r-- 1 root root 2402 Oct 24  2023 mysql-community.repo
-rw-r--r-- 1 root root 2325 Oct 24  2023 mysql-community-debuginfo.repo
-rw-r--r-- 1 root root 8064 Apr 18 13:22 redhat.repo
-rw-r--r-- 1 root root 1570 Aug  5 14:22 enterprisedb-enterprise.repo
-rw-r--r-- 1 root root 1570 Aug  5 16:30 enterprise.repo
-rw-r--r-- 1 root root 1700 Aug  5 16:35 enterprisedb-postgres_distributed.repo

So delete the enterprise.repo file:
rm /etc/yum.repos.d/enterprise.repo


=========================
= Install the packages

sudo dnf -y install edb-bdr5-epas16 edb-pgd5-proxy edb-pgd5-cli

sudo systemctl status edb-as-16
sudo PGSETUP_INITDB_OPTIONS="-E UTF-8" /usr/edb/as16/bin/edb-as-16-setup initdb
sudo systemctl start edb-as-16
systemctl status edb-as-16

vi $HOME/.bash_profile
PATH=$PATH:$HOME/bin:/opt/EDB/TPA/bin:/usr/edb/as16/bin
 alias pgd='sudo -iu enterprisedb pgd'
 alias psql='sudo -iu enterprisedb psql'

####
# Port changing:
# As per doc:
# https://www.enterprisedb.com/docs/pgd/latest/deploy-config/deploy-manual/deploying/05-creating-cluster/
# We recommend you also add the port number of the server to your connection string as port=5444 for EDB Postgres Advanced Server and port=5432 for EDB Postgres Extended and community PostgreSQL.


vi /var/lib/edb/as16/data/postgresql.conf
port = 3306
systemctl restart edb-as-16


############
# BDR Config

echo -e "shared_preload_libraries = '\$libdir/bdr,\$libdir/dbms_pipe,\$libdir/edb_gen,\$libdir/dbms_aq'" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/postgresql.conf >/dev/null

# Set the wal_level
echo -e "wal_level = 'logical'" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/postgresql.conf >/dev/null

# BDR extension also needs the commit timestamp tracking enabled
echo -e "track_commit_timestamp = 'on'" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/postgresql.conf >/dev/null

# Increase max worker procs
echo -e "max_worker_processes = '16'" | sudo -u enterprisedb tee -a /var/lib/edb/as16/data/postgresql.conf >/dev/null

# Set passwd
sudo -u enterprisedb psql -p 3306 edb -c "ALTER USER enterprisedb WITH PASSWORD 'secret'"

#HBA
echo -e "host all all all md5\nhost replication all all md5" | sudo tee -a /var/lib/edb/as16/data/pg_hba.conf

# Enable authentication between nodes
echo -e "*:*:*:enterprisedb:secret" | sudo -u enterprisedb tee /var/lib/edb/.pgpass; sudo chmod 0600 /var/lib/edb/.pgpass

# Restart the server
sudo systemctl restart edb-as-16

# Check the extension has been installed
sudo -u enterprisedb psql edb -p 3306 -c "select * from pg_available_extensions where name like 'bdr'"
 name | default_version | installed_version |                  comment
------+-----------------+-------------------+-------------------------------------------
 bdr  | 5.5.1           |                   | Bi-Directional Replication for PostgreSQL
(1 row)

# Create the replicated database
sudo -u enterprisedb psql edb -p 3306 -c "CREATE DATABASE bdrdb"
sudo -u enterprisedb psql bdrdb -p 3306 -c "CREATE EXTENSION bdr"

sudo -u enterprisedb psql -p 3306 bdrdb

bdrdb=# \dx
                                List of installed extensions
       Name       | Version |   Schema   |                   Description
------------------+---------+------------+--------------------------------------------------
 bdr              | 5.5.1   | pg_catalog | Bi-Directional Replication for PostgreSQL
 edb_dblink_libpq | 1.0     | pg_catalog | EnterpriseDB Foreign Data Wrapper for PostgreSQL
 edb_dblink_oci   | 1.0     | pg_catalog | EnterpriseDB Foreign Data Wrapper for Oracle
 edbspl           | 1.0     | pg_catalog | EDB-SPL procedural language
 plpgsql          | 1.0     | pg_catalog | PL/pgSQL procedural language
(5 rows)

bdrdb=# \conninfo
You are connected to database "bdrdb" as user "enterprisedb" via socket in "/tmp" at port "5444".
bdrdb=#


###########
# Create the cluster


# create first node:
ssh dbgsc-r-db-01
sudo -u enterprisedb psql -p3306  bdrdb
select bdr.create_node('node-one','host=dbgsc-r-db-01 dbname=bdrdb port=3306');
# check:
	select * from bdr.node ;

# create top level group
select bdr.create_node_group('pgd');
# check:
	select * from bdr.node_group ;
	select * from bdr.node_group_config ;
	select * from bdr.node_group_summary;
	
# create a subgroup to allow PGD proxy and future growth
select bdr.create_node_group('bds','pgd');
# check:
	select * from bdr.node_group ;
	select * from bdr.node_group_config ;
	select * from bdr.node_group_summary;

# On second node:
ssh dbgsc-r-db-02
sudo -u enterprisedb psql -p3306  bdrdb
select bdr.create_node('node-two','host=dbgsc-r-db-02 dbname=bdrdb port=3306');
# check:
	select * from bdr.node ;

# Join the second node to the cluster:
select bdr.join_node_group('host=dbgsc-r-db-01 dbname=bdrdb port=3306','bds');
# Check:
	# On node1 and/or node2:
	select * from bdr.group_subscription_summary;
 origin_node_name | target_node_name |    last_xact_replay_timestamp    | sub_lag_seconds | subscription_status
------------------+------------------+----------------------------------+-----------------+---------------------
 node-one         | node-two         | 08-AUG-24 09:15:44.87193 +00:00  | 17.213581       | replicating
 node-two         | node-one         | 08-AUG-24 09:15:44.873119 +00:00 | 17.203054       | replicating


# On third node:
ssh dbgsc-r-db-03
sudo -u enterprisedb psql -p3306  bdrdb
select bdr.create_node('node-three','host=dbgsc-r-db-03 dbname=bdrdb port=3306');
# check:
	select * from bdr.node ;

# Join the third node to the cluster:
select bdr.join_node_group('host=dbgsc-r-db-01 dbname=bdrdb port=3306','bds');
# Check:
	# On any node:
	select * from bdr.group_subscription_summary;
 origin_node_name | target_node_name |    last_xact_replay_timestamp    | sub_lag_seconds | subscription_status
------------------+------------------+----------------------------------+-----------------+---------------------
 node-one         | node-three       | 08-AUG-24 09:20:09.586186 +00:00 | 7.723489        | replicating
 node-one         | node-two         | 08-AUG-24 09:20:09.586186 +00:00 | 7.673169        | replicating
 node-three       | node-one         | 08-AUG-24 09:20:09.59227 +00:00  | 7.701885        | replicating
 node-three       | node-two         | 08-AUG-24 09:20:09.59227 +00:00  | 7.667085        | replicating
 node-two         | node-one         | 08-AUG-24 09:20:09.587423 +00:00 | 7.706732        | replicating
 node-two         | node-three       | 08-AUG-24 09:20:09.587423 +00:00 | 7.722252        | replicating
(6 rows)


########
# Checking the cluster

select bdr.wait_slot_confirm_lsn(NULL, NULL);


# Add data and check cluster replication:
# On node1:
CREATE TABLE quicktest ( id SERIAL PRIMARY KEY, value INT ); 
INSERT INTO quicktest (value) SELECT random()*10000 FROM generate_series(1,10000);
# check:
select * from bdr.node_replication_rates;
select COUNT(*),SUM(value) from quicktest;

# On node2:
select COUNT(*),SUM(value) from quicktest;
# On node3:
select COUNT(*),SUM(value) from quicktest;


##########################################################
##########################################################
# Proxy configuration

#Preparation:
SELECT bdr.alter_node_group_option('bds', 'enable_raft', 'true');
SELECT bdr.alter_node_group_option('bds', 'enable_proxy_routing', 'true');
# Check:
SELECT node_group_name, enable_proxy_routing, enable_raft
            FROM bdr.node_group_summary
           WHERE parent_group_name IS NOT NULL;

# Create the proxies:
SELECT bdr.create_proxy('pgd-proxy-one','bds');
SELECT bdr.create_proxy('pgd-proxy-two','bds');
SELECT bdr.create_proxy('pgd-proxy-three','bds');
# Check:
SELECT proxy_name, node_group_name
             FROM bdr.proxy_config_summary;

# Create a pgdproxy user on the database
CREATE USER pgdproxy PASSWORD 'proxysecret';
GRANT bdr_superuser TO pgdproxy;

# Configure proxy routes to each node:
SELECT bdr.alter_node_option('node-one', 'route_dsn', 'host=dbgsc-r-db-01 dbname=bdrdb port=3306 user=pgdproxy');
SELECT bdr.alter_node_option('node-two', 'route_dsn', 'host=dbgsc-r-db-02 dbname=bdrdb port=3306 user=pgdproxy');
SELECT bdr.alter_node_option('node-three', 'route_dsn', 'host=dbgsc-r-db-03 dbname=bdrdb port=3306 user=pgdproxy');

# Create a pgdproxy user on each host
# On all hosts:
sudo adduser pgdproxy
# os credentials:
echo -e "*:*:*:pgdproxy:proxysecret" | sudo tee /home/pgdproxy/.pgpass
sudo chown pgdproxy /home/pgdproxy/.pgpass
sudo chmod 0600 /home/pgdproxy/.pgpass

# Configure the systemd service on each host
# On all hosts:
sudo sed -i s/root/pgdproxy/ /usr/lib/systemd/system/pgd-proxy.service
sudo systemctl daemon-reload

# Create a proxy config file for each host
# Install a PGD proxy configuration on each host

# On all hosts:
sudo mkdir -p /etc/edb/pgd-proxy

cat <<EOF | sudo tee /etc/edb/pgd-proxy/pgd-proxy-config.yml
cluster:
  name: pgd
  endpoints:
    - "host=dbgsc-r-db-01 dbname=bdrdb port=3306 user=pgdproxy"
    - "host=dbgsc-r-db-02 dbname=bdrdb port=3306 user=pgdproxy"
    - "host=dbgsc-r-db-03 dbname=bdrdb port=3306 user=pgdproxy"
  proxy:
    name: pgd-proxy-one
EOF

# Restart the proxy service:
sudo systemctl restart pgd-proxy
sudo systemctl status pgd-proxy

# Check:
select * from bdr.proxy_config_summary ;
   proxy_name    | node_group_name | listen_addresses | listen_port | max_client_conn | max_server_conn | server_conn_timeout | server_conn_keepalive | node_group_enable_proxy_routing | node_group_location
| fallback_groups | fallback_group_timeout | consensus_grace_period | read_listen_addresses | read_listen_port | read_max_client_conn | read_max_server_conn | read_server_conn_keepalive | read_server_conn_t
imeout | read_consensus_grace_period
-----------------+-----------------+------------------+-------------+-----------------+-----------------+---------------------+-----------------------+---------------------------------+---------------------
+-----------------+------------------------+------------------------+-----------------------+------------------+----------------------+----------------------+----------------------------+-------------------
-------+-----------------------------
 pgd-proxy-one   | bds             | {0.0.0.0}        |        6432 |           32767 |           32767 | 00:00:02            | 00:00:10              | t                               |
|                 | 00:01:00               | 00:00:06               |                       |                  |                      |                      |                            |
       |
 pgd-proxy-two   | bds             | {0.0.0.0}        |        6432 |           32767 |           32767 | 00:00:02            | 00:00:10              | t                               |
|                 | 00:01:00               | 00:00:06               |                       |                  |                      |                      |                            |
       |
 pgd-proxy-three | bds             | {0.0.0.0}        |        6432 |           32767 |           32767 | 00:00:02            | 00:00:10              | t                               |
|                 | 00:01:00               | 00:00:06               |                       |                  |                      |                      |                            |
       |
(3 rows)



# Test access via Proxy:
# local connection without having opened FW port 6432
sudo -iu enterprisedb psql -d "host=dbgsc-r-db-03 dbname=bdrdb port=6432"

# To change proxy listening port:
sudo -u enterprisedb psql -p3306  bdrdb
# bdr.alter_proxy_option(proxy_name text, config_key text, config_value text);
select bdr.alter_proxy_option('pgd-proxy-one', 'listen_port', '3307');
select bdr.alter_proxy_option('pgd-proxy-two', 'listen_port', '3307');
select bdr.alter_proxy_option('pgd-proxy-three', 'listen_port', '3307');

# Restart proxy service on each host:
systemctl restart pgd-proxy

# Test new port accessibility:
# From either dbgsc-r-db-01 or dbgsc-r-db-02:
sudo -iu enterprisedb psql -d "host=dbgsc-r-db-03 dbname=bdrdb port=3307"
\conninfo
select proxy_name, node_group_name, listen_port from bdr.proxy_config_summary ;

# Check:
SELECT node_name FROM bdr.local_node_summary;
SELECT node_group_name, write_lead FROM bdr.node_group_routing_summary;

######################
# PGD CLI install

# Create a configuration file
# Install the configuration file
# On each host:

sudo mkdir -p /etc/edb/pgd-cli

cat <<EOF | sudo tee /etc/edb/pgd-cli/pgd-cli-config.yml
cluster:
  name: pgd
  endpoints:
    - host=dbgsc-r-db-01 dbname=bdrdb port=3306
    - host=dbgsc-r-db-02 dbname=bdrdb port=3306
    - host=dbgsc-r-db-03 dbname=bdrdb port=3306
EOF

sudo -iu enterprisedb pgd check-health
sudo -iu enterprisedb pgd show-nodes
sudo -iu enterprisedb pgd show-proxies
sudo -iu enterprisedb pgd show-groups

# Set a group option:
sudo -iu enterprisedb pgd set-group-options --group-name bds --option "location=Brindisi"
# Check:
sudo -iu enterprisedb pgd show-groups


# Switching write leader:
sudo -iu enterprisedb pgd switchover --group-name bds --node-name node-two
# Check:
sudo -iu enterprisedb pgd show-groups

Group Group ID   Type   Parent Group Location Raft Routing Raft Leader Write Leader
----- --------   ----   ------------ -------- ---- ------- ----------- ------------
pgd   1850374637 global                       true false   node-one
bds   1657103783 data   pgd          Brindisi true true    node-one    node-two


### Outage time:
[root@dbgsc-r-db-02 ~]# systemctl stop edb-as-16

[root@dbgsc-r-db-02 ~]# sudo -iu enterprisedb pgd show-groups
Group Group ID   Type   Parent Group Location Raft Routing Raft Leader Write Leader
----- --------   ----   ------------ -------- ---- ------- ----------- ------------
pgd   1850374637 global                       true false   node-one
bds   1657103783 data   pgd          Brindisi true true    node-one    node-three

[root@dbgsc-r-db-02 ~]# sudo -iu enterprisedb psql -d "host=dbgsc-r-db-02 dbname=bdrdb port=3307"
psql (16.3.0)
Type "help" for help.

sudo -iu enterprisedb pgd show-proxies;

bdrdb=# SELECT node_name FROM bdr.local_node_summary; SELECT node_group_name, write_lead FROM bdr.node_group_routing_summary;
 node_name
------------
 node-three
(1 row)

 node_group_name | write_lead
-----------------+------------
 bds             | node-three
(1 row)

######################
# Role & Privs

roles:
bdr_superuser
bdr_read_all_stats
bdr_read_all_conflicts
bdr_application
bdr_monitor

All in the instance, not the database = Global.

######################
# List all bdr. parameters in the server:
psql -p3306 bdr

select name, setting from pg_settings where name like 'bdr.%';

show work_mem;
alter system set work_mem to 2048;
show work_mem;
select pg_reload_conf();
show work_mem;

alter system reset work_mem;
show work_mem;
select pg_reload_conf();
show work_mem;



######################
# PGD
cat "/etc/edb/pgd-cli/pgd-cli-config.yml"

vi $HOME/.bash_profile
PATH=$PATH:$HOME/bin:/opt/EDB/TPA/bin:/usr/edb/as16/bin
 alias pgd='sudo -iu enterprisedb pgd'
 alias psql='sudo -iu enterprisedb psql'

pgd check-health
pgd show-events -n 50
pgd show-raft
pgd show-nodes
pgd show-groups
pgd show-proxies
pgd show-subscriptions
pgd verify-cluster
pgd verify-settings


######################
# PGD Proxy

ls -lrt /etc/edb/pgd-proxy/
total 4
-rw-r--r-- 1 root root 259 Aug  8 10:38 pgd-proxy-config.yml


psql
sudo -iu enterprisedb psql -p3306 bdrdb

select * from bdr.proxy_config_summary ;
select * from bdr.node_routing_config_summary;
select * from bdr.node_group_routing_summary ;
 node_group_name | write_lead | previous_write_lead |      read_nodes
-----------------+------------+---------------------+-----------------------
 bds             | node-two   | node-two            | {node-one,node-three}

systemctl status pgd-proxy
systemctl stop pgd-proxy
systemctl restart pgd-proxy

psql
\d bdr.proxy_config_summary

select proxy_name, listen_port, listen_addresses from bdr.proxy_config_summary;
   proxy_name    | listen_port | listen_addresses
-----------------+-------------+------------------
 pgd-proxy-one   |        3307 | {0.0.0.0}
 pgd-proxy-two   |        3307 | {0.0.0.0}
 pgd-proxy-three |        3307 | {0.0.0.0}

# To change a proxy port number:

select bdr.alter_proxy_option('pgd-proxy-two','listen_port','6432');
select proxy_name, listen_port, listen_addresses from bdr.proxy_config_summary;
psql -p 6432 -h dbgsc-r-db-02 bdrdb
systemctl restart pgd-proxy
psql -p 6432 -h dbgsc-r-db-02 bdrdb

# A new proxy:
yum install pgd-proxy

bdr.alter_node_group_option
pgd set-group-options

bdr.alter_node_option
select * from bdr.node_group_summary ;
select * from bdr.node_group_routing_summary ;

######################
# Managing Nodes

# How to retrieve password from cluster (tpaexec)
tpaexec show-password . enterprisedb

bdr.promote_node()

BDR node
	 SELECT node_id,node_name,node_group_id, seq_id, source_node_id, dbname
	FROM bdr.node ORDER BY seq_id;

Data Nodes
Logical Standby node
Subscriber-only node
Witness nodes
Physical Standby Nodes

SELECT * FROM bdr.group_versions_details ;

pgd show-nodes

bdr.create_node()
bdr.drop_node()
bdr.promote_node()
bdr.part_node()

select bdr.part_node(node_name:='node-three');
select bdr.drop_node(node_name:='node-three');


# Node failures

BDR provides various other management interfaces:
● bdr.create_node_group
● bdr.alter_node_group_config
● bdr.join_node_group
● bdr.switch_node_group
● bdr.promote_node
● bdr.wait_for_join_completion
● bdr.alter_node_interface
● bdr.alter_subscription_enable
● bdr.alter_subscription_disable
Nodes can also be added using a command-line utility called bdr_init_physical

 SELECT bdr.create_node
(node:=’bdr_node14’,
local_dsn:= ‘host=bdr-node4
port=5432
dbname=bdrdb
user=postgres);

SELECT * FROM bdr.local_node_summary;
 node_name  | node_group_name |             interface_connstr             | peer_state_name | peer_target_state_name | node_seq_id | node_local_dbname | pub_repsets | sub_repsets |  node_id   | node_group_i
d | node_kind_name
------------+-----------------+-------------------------------------------+-----------------+------------------------+-------------+-------------------+-------------+-------------+------------+-------------
--+----------------
 node-three | bds             | host=dbgsc-r-db-03 dbname=bdrdb port=3306 | ACTIVE          | ACTIVE                 |           3 | bdrdb             | {pgd,bds}   | {pgd,bds}   | 1954860017 |    165710378
3 | data
(1 row)

 SELECT node_id,node_name,node_group_name,peer_state_name,node_seq_id
FROM bdr.node_summary ORDER BY node_seq_id;

  node_id   | node_name  | node_group_name | peer_state_name | node_seq_id
------------+------------+-----------------+-----------------+-------------
 2824718320 | node-one   | bds             | ACTIVE          |           1
 2299992455 | node-two   | bds             | ACTIVE          |           2
 1954860017 | node-three | bds             | ACTIVE          |           3
(3 rows)

###########
# Failed node

# On node1:
systemctl stop edb-as-16.service
rm -rf /var/lib/edb/as16/data

select * from pg_stat_replication_slots ;
        slot_name         | spill_txns | spill_count | spill_bytes | stream_txns | stream_count | stream_bytes | total_txns | total_bytes | stats_reset
--------------------------+------------+-------------+-------------+-------------+--------------+--------------+------------+-------------+-------------
 bdr_bdrdb_pgd            |          0 |           0 |           0 |           0 |            0 |            0 |          0 |           0 |
 bdr_bdrdb_pgd_node_one   |          0 |           0 |           0 |           0 |            0 |            0 |     168029 |    77460453 |
 bdr_bdrdb_pgd_node_three |          0 |           0 |           0 |           0 |            0 |            0 |     168015 |    77423973 |
(3 rows)


select slot_name, active from pg_replication_slots ;
        slot_name         | active
--------------------------+--------
 bdr_bdrdb_pgd            | f
 bdr_bdrdb_pgd_node_one   | f
 bdr_bdrdb_pgd_node_three | t
(3 rows)

#Remove node1 from replication to avoid filling up WAL.

 select bdr.part_node(node_name:='node-one');
NOTICE:  node node-one has been removed from the bdr group
 part_node
-----------

(1 row)

select node_name, peer_state_name from bdr.node_summary ;
 node_name  | peer_state_name
------------+-----------------
 node-two   | ACTIVE
 node-three | ACTIVE
 node-one   | PARTED
(3 rows)

# Check slot1 has been removed so no more accumulating of WAL.
select slot_name, active from pg_replication_slots ;
        slot_name         | active
--------------------------+--------
 bdr_bdrdb_pgd            | f
 bdr_bdrdb_pgd_node_three | t
(2 rows)

# Restore the data dir
# using bdr_init_physical

sudo -iu enterprisedb bdr_init_physical -D /var/lib/edb/as16/data -n node-one -s -v \
 -d "host=dbgsc-r-db-02 port=3306 dbname=bdrdb user=enterprisedb" \
 --local-dsn "host=dbgsc-r-db-01 port=3306 dbname=bdrdb user=enterprisedb"

systemctl status edb-as-16.service
systemctl start edb-as-16.service

select node_name, peer_state_name from bdr.node_summary ;
select slot_name, active from pg_replication_slots ;
SELECT node_name FROM bdr.local_node_summary; SELECT node_group_name, write_lead FROM bdr.node_group_routing_summary;

###########
# DDL Locking

show bdr.ddl_locking ;
show bdr.ddl_replication;

begin;
create table testddl (i int primary key);

select * from bdr.global_locks;

